# GraphQL schema example
#
# https://gqlgen.com/getting-started/

scalar Time

type Query {
  tenants(id: ID): [Tenant!]!
  users(id: ID): [User!]!
  containerTypes(id: ID): [ContainerType!]!
  # containers: [Container!]!
  componentTypes(id: ID): [ComponentType!]!
  # components: [Component!]!
}

type Mutation {
  createTenant(input: NewTenant!): Tenant!
  createUser(input: NewUser!): User!
  createContainerType(input: NewContainerType!): ContainerType!
  # createContainer(input: NewContainer!): Container!
  createComponentType(input: NewComponentType!): ComponentType!
  # createComponent(input: NewComponent!): Component!
  # createQuantity(input: NewQuantity!): Quantity!
}

type Tenant {
  id: ID!
  createdAt: Time!
  name: String!
  users: [User!]
  containerTypes: [ContainerType!]
  componentTypes: [ComponentType!]
}

input NewTenant {
  id: ID
  name: String!
}

type User {
  id: ID!
  tenant: Tenant!
  createdAt: Time!
  name: String!
}

input NewUser {
  id: ID
  tenantId: ID!
  name: String!
}

type ContainerType {
  id: ID!
  tenant: Tenant!
  createdAt: Time!
  description: String!
  # containers: [Container!]
}

input NewContainerType{
  id: ID
  tenantId: ID!
  description: String!
}

# type Container {
#   id: ID!
#   tenant: Tenant!
#   createdAt: Time!
#   containerType: ContainerType!
#   description: String!
#   components: [Component!]
# }

# input NewContainer {
#   tenant: ID!
#   containerType: ID!
#   description: String!
# }

type ComponentType {
  id: ID!
  tenant: Tenant!
  createdAt: Time!
  description: String!
#  components: [Component!]
}

input NewComponentType {
  id: ID
  tenantId: ID!
  description: String!
}

# type Component {
#   id: ID!
#   tenant: Tenant!
#   createdAt: Time!
#   componentType: ComponentType!
#   description: String!
#   containers: [Container!]
# }

# input NewComponent {
#   tenant: ID!
#   componentType: ID!
#   description: String!
# }

# type Quantity {
#   id: ID!
#   container: Container!
#   component: Component!
#   quantity: Int!
# }

# input NewQuantity {
#   container: ID!
#   component: ID!
#   quantity: Int!
# }